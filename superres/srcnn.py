# AUTOGENERATED! DO NOT EDIT! File to edit: nbs/2014_srcnn.ipynb (unless otherwise specified).

__all__ = ['SRCNN']

# Cell
from fastai import *
from fastai.vision import *
from fastai.callbacks import *

# Cell
class SRCNN(nn.Module):
    """ Image super-resolution using deep convolutional networks """

    def __init__(self):
        super(SRCNN, self).__init__()
        self.conv1 = nn.Conv2d(in_channels=3, out_channels=64, kernel_size=9, padding=4)
        self.conv2 = nn.Conv2d(in_channels=64, out_channels=32, kernel_size=1, padding=0)
        self.conv3 = nn.Conv2d(in_channels=32, out_channels=3, kernel_size=5, padding=2)
        self.activate = nn.ReLU()

    def forward(self, x):
        h = self.activate(self.conv1(x))
        h = self.activate(self.conv2(h))
        return self.conv3(h)